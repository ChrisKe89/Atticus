name: Lint and Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  frontend-quality:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ankane/pgvector:0.5.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: atticus
        options: >-
          --health-cmd "pg_isready -U postgres -d atticus"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: ["20"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set up Python for audits
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python audit tooling
        run: python -m pip install --upgrade pip vulture

      - name: Next.js lint
        run: pnpm run lint

      - name: Next.js typecheck
        run: pnpm run typecheck

      - name: Next.js build
        run: pnpm run build

      - name: Prepare audit report directory
        run: mkdir -p reports/ci

      - name: Audit TypeScript usage graph
        run: |
          set -o pipefail
          pnpm run audit:ts -- --reporter json | tee reports/ci/knip-strict.json

      - name: Audit icon usage
        run: |
          set -o pipefail
          pnpm run audit:icons | tee reports/ci/icon-audit.log

      - name: Audit Next.js routes
        run: |
          set -o pipefail
          pnpm run audit:routes | tee reports/ci/routes.json

      - name: Audit Python unused code
        run: |
          set -o pipefail
          pnpm run audit:py | tee reports/ci/python-unused.json

      - name: Upload audit reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-audit-reports
          path: reports/ci

  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install project + dev tools
        run: |
          python -m pip install --upgrade pip
          # Installs your package and dev extras (ruff, mypy, pytest, pydantic, etc.)
          python -m pip install -e ".[dev]"
          python -m pip install pre-commit

      - name: Show tool versions
        run: |
          python --version
          ruff --version
          mypy --version
          pytest --version

      - name: Ruff lint
        run: ruff check .

      - name: Ruff format check
        run: ruff format --check .

      - name: Type check
        run: |
          # Grab stubs for common third-party libs if available (non-fatal)
          mypy --install-types --non-interactive || true
          # Match your mypy package set
          mypy atticus api ingest retriever eval

      - name: Tests with coverage (>=90%)
        run: |
          pytest --maxfail=1 --disable-warnings \
                 --cov=atticus --cov=api --cov=retriever \
                 --cov-report=term-missing --cov-fail-under=90 -q
      - name: Pre-commit (all files)
        run: pre-commit run --all-files --show-diff-on-failure

  migration-smoke:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ankane/pgvector:0.5.1
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/atticus_smoke
      PGVECTOR_DIMENSION: 3072
      PGVECTOR_LISTS: 100
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Create ephemeral database
        run: psql postgresql://postgres:postgres@localhost:5432/postgres -c "CREATE DATABASE atticus_smoke;"

      - name: Generate Prisma client
        run: pnpm run prisma:generate

      - name: Apply Prisma migrations (smoke)
        run: pnpm exec prisma migrate deploy

      - name: Seed database (non-blocking)
        run: pnpm run db:seed
        continue-on-error: true

      - name: Verify pgvector schema
        run: make db.verify

      - name: Drop ephemeral database
        if: always()
        run: psql postgresql://postgres:postgres@localhost:5432/postgres -c "DROP DATABASE IF EXISTS atticus_smoke WITH (FORCE);"

  compose-smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Compose smoke test
        env:
          DOCKER_BUILDKIT: 1
        run: make compose-up
