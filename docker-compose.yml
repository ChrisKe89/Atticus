services:
  postgres:
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
      args:
        PGVECTOR_VERSION: ${PGVECTOR_VERSION:-0.8.1}
        INDEX_MAX_DIMENSIONS: ${INDEX_MAX_DIMENSIONS:-4096}
    container_name: atticus-postgres
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-atticus}
      POSTGRES_USER: ${POSTGRES_USER:-atticus}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-atticus}
      PGVECTOR_INDEX_MAX_DIMENSIONS: ${PGVECTOR_INDEX_MAX_DIMENSIONS:-4096}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build: ./api
    container_name: atticus-api
    env_file: .env
    depends_on:
      - postgres
    volumes:
      - ./content:/app/content:ro
      - indices:/app/indices
      - logs:/app/logs
    ports:
      - "8000:8000"
    read_only: true
    tmpfs:
      - /tmp
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 3s
      retries: 5

  nginx:
    build: ./nginx
    container_name: atticus-nginx
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 5s
      retries: 3

  admin:
    image: node:20
    container_name: atticus-admin
    working_dir: /workspace/admin
    environment:
      ATTICUS_MAIN_BASE_URL: ${ATTICUS_MAIN_BASE_URL:-http://host.docker.internal:3000}
      ATTICUS_REVIEWER_NAME: ${ATTICUS_REVIEWER_NAME:-Admin Service}
      ATTICUS_REVIEWER_EMAIL: ${ATTICUS_REVIEWER_EMAIL:-admin@example.com}
      ATTICUS_REVIEWER_ID: ${ATTICUS_REVIEWER_ID:-admin-service}
    command: ["npm", "run", "dev"]
    volumes:
      - .:/workspace
    ports:
      - "9000:9000"
    depends_on:
      - api

volumes:
  indices:
  logs:
  postgres_data:
