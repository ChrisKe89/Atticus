/**
 * Autogenerated documentation for `app/apps/page.tsx` within the Atticus codebase.
 * Key exports: follow the named or default exports defined below; inputs and outputs remain as implemented and correlate with related modules via existing imports.
 * Documentation only—do not modify runtime behavior when updating this comment.
 */

import type { Metadata } from "next";
import Link from "next/link";
import { Calendar, FileText, KanbanSquare, Layers } from "lucide-react";
import { PageHeader } from "@/components/page-header";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const integrations = [
  {
    name: "Prisma ingestion",
    description:
      "Sync product sheets, tables, and field notes from Postgres with deterministic chunking.",
    icon: Layers,
    href: "#prisma",
  },
  {
    name: "Salesforce service cloud",
    description:
      "Escalate chat transcripts to a case queue with the full retrieval trace and request ID.",
    icon: KanbanSquare,
    href: "#salesforce",
  },
  {
    name: "SharePoint content feeds",
    description: "Monitor document libraries for updates and trigger incremental embeddings.",
    icon: FileText,
    href: "#sharepoint",
  },
  {
    name: "Teams meeting sync",
    description: "Push escalations and release notes to your customer success Teams channel.",
    icon: Calendar,
    href: "#teams",
  },
];

export const metadata: Metadata = {
  title: "Apps · Atticus",
};

export default function AppsPage() {
  return (
    <div className="mx-auto flex w-full max-w-6xl flex-col gap-10">
      <PageHeader
        eyebrow="Apps"
        title="Integrate Atticus across your stack"
        description="Connect ingest pipelines, escalation workflows, and downstream analytics in a few clicks."
      />

      <section className="grid gap-6 md:grid-cols-2">
        {integrations.map((integration) => (
          <Card
            key={integration.name}
            className="transition hover:-translate-y-1 hover:shadow-lg dark:hover:shadow-indigo-500/10"
          >
            <CardHeader className="gap-3 pb-0">
              <div className="inline-flex h-11 w-11 items-center justify-center rounded-2xl bg-indigo-600/10 text-indigo-600 dark:bg-indigo-500/20 dark:text-indigo-300">
                <integration.icon className="h-5 w-5" aria-hidden="true" />
              </div>
              <CardTitle>{integration.name}</CardTitle>
              <CardDescription>{integration.description}</CardDescription>
            </CardHeader>
            <CardContent className="pt-4">
              <Button asChild variant="link" className="px-0">
                <Link href={integration.href}>View setup guide</Link>
              </Button>
            </CardContent>
          </Card>
        ))}
      </section>
    </div>
  );
}
