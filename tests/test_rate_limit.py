"""Autogenerated documentation for `tests/test_rate_limit.py` within the Atticus project.

This module participates in the documentation pipeline by summarizing the purpose and exports declared below without altering runtime semantics.
Key exports: review the functions, classes, and constants defined in this file when tracing dependencies across the codebase.
Documentation onlyâ€”do not change runtime behavior when updating this note.
"""

from api.rate_limit import RateLimiter


def test_rate_limiter_allows_and_blocks(monkeypatch) -> None:
    times = iter([100.0, 100.2, 101.5])

    def _monotonic():
        return next(times)

    limiter = RateLimiter(limit=1, window_seconds=1)
    monkeypatch.setattr("api.rate_limit.time.monotonic", _monotonic)

    allowed, remaining = limiter.allow("user")
    assert allowed and remaining == 0

    allowed_second, retry_after = limiter.allow("user")
    assert not allowed_second and retry_after >= 1
    assert limiter.blocked == 1

    allowed_third, remaining_third = limiter.allow("user")
    assert allowed_third and remaining_third == 0

    snapshot = limiter.snapshot()
    assert snapshot["active_keys"] == 1

    # Ensure reset clears counters and buckets.
    limiter.reset()
    assert limiter.blocked == 0
    assert limiter._buckets == {}
