"""Autogenerated documentation for `tests/test_citation_utils_extra.py` within the Atticus project.

This module participates in the documentation pipeline by summarizing the purpose and exports declared below without altering runtime semantics.
Key exports: review the functions, classes, and constants defined in this file when tracing dependencies across the codebase.
Documentation onlyâ€”do not change runtime behavior when updating this note.
"""

from types import SimpleNamespace

from retriever.citation_utils import (
    _norm_pages,
    _norm_source_path,
    dedupe_citations,
)


class BadPath:
    def __fspath__(self):
        raise RuntimeError("boom")


def test_norm_source_path_handles_exceptions() -> None:
    assert _norm_source_path(None) == ""
    assert _norm_source_path("Content/Doc.PDF") == "doc"
    fallback = _norm_source_path(BadPath())
    assert fallback  # falls back to string representation


def test_norm_pages_parses_iterables_and_strings() -> None:
    assert _norm_pages([3, 1, 3]) == (1, 3, 3)
    assert _norm_pages("1, 2 3") == (1, 2, 3)
    assert _norm_pages(5) == (5,)


def test_dedupe_citations_varied_inputs() -> None:
    items = [
        {"source_path": "docs/file.pdf", "page_range": [1, 2]},
        SimpleNamespace(source_path="docs/file.pdf", pages={2, 1}),
        {"source_path": "docs/other.pdf", "pages": "3 4"},
        {"source_path": None, "pages": None},
    ]
    result = dedupe_citations(items)
    assert len(result) == 3
