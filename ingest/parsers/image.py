"""Autogenerated documentation for `ingest/parsers/image.py` within the Atticus project.

This module participates in the documentation pipeline by summarizing the purpose and exports declared below without altering runtime semantics.
Key exports: review the functions, classes, and constants defined in this file when tracing dependencies across the codebase.
Documentation onlyâ€”do not change runtime behavior when updating this note.
"""

from __future__ import annotations

from pathlib import Path
from typing import Any, cast

from PIL import Image

from ..models import ParsedDocument, ParsedSection

try:  # pragma: no cover - optional dependency
    import pytesseract as _pytesseract
except Exception:  # pragma: no cover - runtime fallback
    _pytesseract = None

pytesseract: Any | None = _pytesseract


def parse_image(path: Path) -> ParsedDocument:
    text = ""
    if pytesseract is not None:  # pragma: no cover - requires external binary
        try:
            with Image.open(str(path)) as image:
                text = cast(str, pytesseract.image_to_string(image))
        except Exception:
            text = ""
    section = ParsedSection(text=text.strip(), breadcrumbs=["Image"])
    return ParsedDocument(
        source_path=path,
        source_type="image",
        sections=[section],
    )
