repos:
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.1
    hooks:
      - id: ruff
        args: ["--fix"]
        exclude: '^_tmp_.*\.py$'
      - id: ruff-format
        exclude: '^_tmp_.*\.py$'
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          - pydantic
          - pydantic-settings
          - types-requests
          - types-PyYAML
        args: ["--config-file=pyproject.toml"]
  - repo: local
    hooks:
      - id: markdownlint-cli2
        name: markdownlint-cli2
        entry: npx --yes markdownlint-cli2
        language: node
        pass_filenames: false
        types: [markdown]
        additional_dependencies:
          - markdownlint-cli2@0.12.0
        args: ["**/*.md", "#node_modules", "#.venv"]
      - id: forbid-tmp-files
        name: forbid tmp files (_tmp_*)
        language: python
        entry: python
        pass_filenames: false
        args:
          - -c
          - |
            import os, sys, subprocess
            try:
                out = subprocess.check_output(['git', 'ls-files', '-z'])
            except Exception as e:
                print(f'forbid-tmp: unable to list files: {e}')
                sys.exit(0)
            files = out.decode('utf-8', 'ignore').split('\0')
            bad = [p for p in files if p and (os.path.basename(p).startswith('_tmp_') or '/_tmp_' in p or '\\_tmp_' in p)]
            if bad:
                print('Forbidden tmp files found:\n' + '\n'.join(bad))
                sys.exit(1)
            sys.exit(0)
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.4
    hooks:
      - id: gitleaks
        args: ["protect", "--verbose", "--redact", "--staged", "--config=.gitleaks.toml"]
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.30.1
    hooks:
      - id: commitizen
        stages: [commit-msg]
